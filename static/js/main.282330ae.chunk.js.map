{"version":3,"sources":["Cool-alarm-tone-notification-sound.mp3","App.js","serviceWorker.js","index.js"],"names":["module","exports","library","add","faPlay","faPause","faPlus","faTimes","faCog","faPen","breakTime","PopUp","className","onClick","this","props","endBreakResume","endBreak","src","alarmSound","autoPlay","loop","React","Component","BreakButton","state","running","finished","time","timerLength","startBreak","bind","convertTime","clearInterval","timer","stopTimer","onStart","setState","start","Date","now","setInterval","setTimeout","onFinish","min","Math","floor","sec","toFixed","popUp","value","maxValue","styles","path","strokeLinecap","onStop","Timer","hovering","breakRunning","startTimer","resetTimer","console","log","hr","id","isOpen","undefined","onMouseEnter","onMouseLeave","icon","size","onDelete","text","name","TimerManager","cookies","names","getAll","maxId","set","get","timerNames","open","addRequested","addTimer","createTimer","openTimer","newTimerNames","curId","remove","newOpen","Object","keys","length","type","label","handleSubmit","map","i","key","deleteTimer","SettingMenu","edit","hover","updateBreak","displayBreak","after","SingleForm","handleChange","event","target","preventDefault","onSubmit","onChange","Button","isHover","isHoever","withCookies","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","CookiesProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.282330ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Cool-alarm-tone-notification-sound.8c0b93aa.mp3\";","import React from 'react';\r\nimport { instanceOf } from 'prop-types';\r\nimport { withCookies, Cookies } from 'react-cookie';\r\nimport './App.css';\r\nimport alarmSound from './Cool-alarm-tone-notification-sound.mp3';\r\n// import ContentEditable from 'react-contenteditable';\r\nimport { CircularProgressbar, CircularProgressbarWithChildren } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faPlay,\r\n  faPause,\r\n  faPlus,\r\n  faTimes,\r\n  faCog,\r\n  faPen\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(faPlay, faPause, faPlus, faTimes, faCog, faPen);\r\n\r\nlet breakTime = 300000;\r\n\r\nclass PopUp extends React.Component {\r\n  render() {\r\n    return(<div className=\"popUp\">\r\n    <h2>Ready to Resume?</h2>\r\n    <button onClick={this.props.endBreakResume}>yes</button>\r\n    <button onClick={this.props.endBreak}>no</button>\r\n    <audio src={alarmSound} autoPlay loop/>\r\n    </div>);\r\n  }\r\n}\r\n\r\nclass BreakButton extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      running: false,\r\n      finished: false,\r\n      time: props.timerLength\r\n    }\r\n    this.startBreak = this.startBreak.bind(this);\r\n    this.convertTime = this.convertTime.bind(this);\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n    clearInterval(this.stopTimer);\r\n  }\r\n  startBreak() {\r\n    this.props.onStart();\r\n    this.setState({\r\n      running: true,\r\n      start: Date.now(),\r\n      time: this.props.timerLength\r\n    });\r\n    this.timer = setInterval(() => this.setState({\r\n      time: this.props.timerLength - (Date.now() - this.state.start)\r\n    }), 1000);\r\n    this.stopTimer = setTimeout(() => {\r\n      clearInterval(this.timer);\r\n      this.props.onFinish();\r\n      this.setState({\r\n        running: false,\r\n        finished: true\r\n      });\r\n    }, this.props.timerLength);\r\n  }\r\n  convertTime() {\r\n    let min = Math.floor(this.state.time / 60000);\r\n    let sec = ((this.state.time % 60000) / 1000).toFixed(0);\r\n    return min + \":\" + (sec < 10 ? '0' : '') + sec;\r\n  }\r\n  render() {\r\n    let popUp = null;\r\n    if(this.state.running) {\r\n      return (\r\n        <CircularProgressbarWithChildren value={this.state.time} maxValue={this.props.timerLength} styles={{path: {strokeLinecap: 'butt'}}}>\r\n        <h3 className=\"inner\">{this.convertTime()}</h3>\r\n        </CircularProgressbarWithChildren>\r\n      );\r\n    } else {\r\n      if(this.state.finished) {\r\n        popUp = <PopUp endBreak={() => this.setState({finished: false})} endBreakResume={() => {\r\n          this.setState({finished: false});\r\n          this.props.onStop();\r\n        }}/>\r\n      }\r\n      return (<>\r\n        <CircularProgressbarWithChildren value={100} styles={{path: {strokeLinecap: 'butt'}}}>\r\n        <h3 className=\"inner\" onClick={this.startBreak}>Take a Break</h3>\r\n        </CircularProgressbarWithChildren>\r\n        {popUp}\r\n      </>);\r\n    }\r\n  }\r\n}\r\n\r\nclass Timer extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      hovering: false,\r\n      running: false,\r\n      breakRunning: false,\r\n      time: 0,\r\n      start: 0\r\n    }\r\n    this.startTimer = this.startTimer.bind(this);\r\n    this.stopTimer = this.stopTimer.bind(this);\r\n    this.resetTimer = this.resetTimer.bind(this);\r\n    this.convertTime = this.convertTime.bind(this);\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n  }\r\n  startTimer() {\r\n    console.log('start');\r\n    this.setState({\r\n      start: Date.now() - this.state.time,\r\n      running: true\r\n    })\r\n    this.timer = setInterval(() => this.setState({\r\n      time: Date.now() - this.state.start}), 1000);\r\n  }\r\n  stopTimer() {\r\n    console.log('stop');\r\n    this.setState({running: false});\r\n    clearInterval(this.timer);\r\n  }\r\n  resetTimer() {\r\n    this.setState({time: 0});\r\n  }\r\n  convertTime() {\r\n    let hr = Math.floor(this.state.time / 3600000);\r\n    let min = ((this.state.time % 3600000) / 60000).toFixed(0);\r\n    let sec = ((this.state.time % 60000) / 1000).toFixed(0);\r\n    return hr + ':' + (min < 10 ? '0':'') + min + \":\" + (sec < 10 ? '0' : '') + sec;\r\n  }\r\n  render() {\r\n    // let deleteBtn = null;\r\n    // if(this.state.hovering) {\r\n    //   deleteBtn = <FontAwesomeIcon icon=\"times\" size=\"lg\" className=\"delete\" onClick={this.props.onDelete}/>\r\n    // }\r\n    // if(this.props.isOpen) {\r\n      return (<div id={this.props.id} className={this.props.isOpen ? \"open\":\"close\"}\r\n      onClick={this.props.isOpen ? undefined:this.props.onClick} onMouseEnter={() => this.setState({hovering:true})} onMouseLeave={() => this.setState({hovering:false})}>\r\n        {this.state.hovering &&\r\n          <FontAwesomeIcon icon=\"times\" size=\"lg\" className=\"delete\" onClick={this.props.onDelete}/>}\r\n        {this.props.isOpen &&\r\n          <Button className=\"reset\" onClick={this.resetTimer} text=\"Clear Timer\"/>}\r\n        <h2>{this.props.name}</h2>\r\n        <h1>{this.convertTime()}</h1>\r\n        <div className=\"buttonHolder\">\r\n        {this.props.isOpen &&\r\n          <div className=\"button\">\r\n            <CircularProgressbarWithChildren value={100}>\r\n              <FontAwesomeIcon icon={this.state.running ? \"pause\":\"play\"} size=\"4x\" onClick={this.state.running ? this.stopTimer : this.startTimer}/>\r\n            </CircularProgressbarWithChildren>\r\n          </div>}\r\n          {(this.props.isOpen || this.state.breakRunning) &&\r\n            <div className=\"button\">\r\n              <BreakButton timerLength={breakTime}\r\n              onStart={() => {\r\n                this.setState({breakRunning: true});\r\n                this.stopTimer();\r\n              }} onStop={this.startTimer} onFinish={() => {\r\n                this.props.onClick();\r\n                this.setState({breakRunning: false});\r\n              }}/>\r\n          </div>}\r\n        </div>\r\n      </div>);\r\n    // } else {\r\n    //   return (<div id={this.props.id} className=\"close\" onClick={this.props.onClick} onMouseEnter={() => this.setState({hovering:true})} onMouseLeave={() => this.setState({hovering:false})}>\r\n    //       <h2>{this.props.name}</h2>\r\n    //       <h3>{this.convertTime()}</h3>\r\n    //       {this.state.breakRunning && breakBtn}\r\n    //       {deleteBtn}\r\n    //     </div>);\r\n    // }\r\n  }\r\n}\r\n\r\nclass TimerManager extends React.Component {\r\n  static propTypes = {\r\n    cookies: instanceOf(Cookies).isRequired\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    const { cookies } = props;\r\n    let names = cookies.getAll();\r\n    if(names != undefined) {\r\n      delete names.maxId;\r\n    } else {\r\n      cookies.set('maxId', 0, {path: '/'});\r\n    }\r\n    this.state = {\r\n      maxId: cookies.get('maxId') + 1 || 0,\r\n      timerNames: names || {},\r\n      open: 0,\r\n      addRequested: false\r\n    }\r\n    this.addTimer = this.addTimer.bind(this);\r\n    this.createTimer = this.createTimer.bind(this);\r\n    this.openTimer = this.openTimer.bind(this);\r\n  }\r\n\r\n  createTimer() {\r\n    this.setState({addRequested: true});\r\n  }\r\n\r\n  addTimer(name) {\r\n    const {cookies} = this.props;\r\n    let newTimerNames = this.state.timerNames;\r\n    let curId = this.state.maxId;\r\n    newTimerNames[curId] = name;\r\n    cookies.set(curId, name, {path: '/'});\r\n    cookies.set('maxId', this.state.maxId, {path: '/'});\r\n    this.setState({\r\n      timerNames: newTimerNames,\r\n      maxId: curId + 1,\r\n      open: curId, //set just added timer to open\r\n      addRequested: false\r\n    });\r\n  }\r\n\r\n  openTimer(id) {\r\n    this.setState({\r\n      open: id\r\n    })\r\n  }\r\n\r\n  deleteTimer(id) {\r\n    let newTimerNames = this.state.timerNames;\r\n    delete newTimerNames[id];\r\n    this.props.cookies.remove(id, {path: '/'});\r\n    let newOpen = this.state.open;\r\n    if(id == this.state.open) {\r\n      newOpen = Object.keys(this.state.timerNames)[0]; // first id in list\r\n    }\r\n    this.setState({\r\n      open: newOpen,\r\n      timerNames: newTimerNames\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let add = null;\r\n    if(Object.keys(this.state.timerNames).length < 10) {\r\n      add = <div className=\"add\" onClick={this.createTimer}>\r\n        <h2><FontAwesomeIcon icon=\"plus\" className=\"plus\"/> Add Timer</h2>\r\n        {this.state.addRequested &&\r\n          <SingleForm type=\"text\" label=\"Name: \" handleSubmit={this.addTimer}/>\r\n        }\r\n      </div>\r\n    }\r\n      return(<div className=\"manager\">\r\n        <SettingMenu/>\r\n        {Object.keys(this.state.timerNames).map((i) => (\r\n          <Timer name={this.state.timerNames[i]} id={i} isOpen={i == this.state.open} key={i} onClick={() => this.openTimer(i)} onDelete={() => this.deleteTimer(i)}/>\r\n        ))}\r\n        {add}\r\n      </div>);\r\n    // }\r\n  }\r\n}\r\n\r\nclass SettingMenu extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      edit: false,\r\n      hover: false\r\n    }\r\n    this.updateBreak = this.updateBreak.bind(this);\r\n    this.displayBreak = this.displayBreak.bind(this);\r\n  }\r\n  updateBreak(time) {\r\n    this.setState({\r\n      edit: false\r\n    });\r\n    breakTime = time * 60000; //times 1 min in ms\r\n  }\r\n  displayBreak() {\r\n    return (breakTime / 60000) + \":00\";\r\n  }\r\n  render() {\r\n    if(this.state.open) {\r\n      return (<div className=\"settings edit\">\r\n        <FontAwesomeIcon icon=\"cog\" onClick={() => this.setState({open:false, edit:false})}/>\r\n        {!this.state.edit &&\r\n          <h4 onMouseEnter={() => this.setState({hover:true})}\r\n          onMouseLeave={() => this.setState({hover:false})}>\r\n            {this.state.hover &&\r\n            <FontAwesomeIcon icon=\"pen\" onClick={() => this.setState({edit: true})}/>}\r\n            Break Length: {this.displayBreak()}\r\n          </h4>}\r\n        {this.state.edit &&\r\n          <><h4>Break Length:</h4>\r\n          <SingleForm type=\"number\" label=\" (min)\" after={true} handleSubmit={this.updateBreak}/></>}\r\n      </div>);\r\n    } else {\r\n      return (<div className=\"settings\">\r\n        <FontAwesomeIcon icon=\"cog\" onClick={() => this.setState({open: true})}/>\r\n      </div>);\r\n    }\r\n  }\r\n}\r\n\r\nclass SingleForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {value: ''};\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    this.props.handleSubmit(this.state.value);\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          {!this.props.after && this.props.label}\r\n          <input type={this.props.type} value={this.state.value} onChange={this.handleChange} />\r\n          {this.props.after && this.props.label}\r\n        </label>\r\n        <input type=\"submit\" value=\"Submit\"/>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nclass Button extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isHover: false\r\n    }\r\n  }\r\n  render() {\r\n    return(<button className={this.props.className} onClick={this.props.onClick} onMouseEnter={()=> this.setState({isHover: true})} onMouseLeave={() => this.setState({isHoever: false})}>{this.props.text}</button>)\r\n  }\r\n}\r\n\r\n// class App extends React.Component {\r\n//   static propTypes = {\r\n//     cookies: instanceOf(Cookies).isRequired\r\n//   };\r\n//   // // constructor(props) {\r\n//   // //   super(props);\r\n//   // //   const { cookies } = this.props;\r\n//   // // }\r\n//   // componentDidMount() {\r\n//   //   const { cookies } = this.props;\r\n//   //   cookies.set('test', 'pls work', {path: '/'});\r\n//   //   console.log('attemping to set');\r\n//   // }\r\n//   render() {\r\n//     // console.log(this.props.cookies.get('test'));\r\n//     return (withCookies(<TimerManager/>));\r\n//   }\r\n// }\r\n\r\nexport default withCookies(TimerManager);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { CookiesProvider } from 'react-cookie';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CookiesProvider>\r\n      <App />\r\n    </CookiesProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}